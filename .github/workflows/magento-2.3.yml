name: Magento 2.3 Community Edition Docker container build
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.0, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.0, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.0, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.0, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.2, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.2, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.2, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.2, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.3, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.4, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.5-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.5-p2, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.6, SAMPLE_DATA: true }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php71-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php72-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.6-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7, SAMPLE_DATA: true }
#          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7, SAMPLE_DATA: false }
#          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7, SAMPLE_DATA: true }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7-p1, SAMPLE_DATA: true }
#          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7-p1, SAMPLE_DATA: false }
#          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7-p1, SAMPLE_DATA: true }
          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7-p2, SAMPLE_DATA: false }
          - { PHP_VERSION: php73-fpm, MAGENTO_VERSION: 2.3.7-p2, SAMPLE_DATA: true }
          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7-p2, SAMPLE_DATA: false }
          - { PHP_VERSION: php74-fpm, MAGENTO_VERSION: 2.3.7-p2, SAMPLE_DATA: true }
    steps:
    - uses: actions/checkout@v1

    # Step 1: Build the docker image
    - name: Build the Docker image (without sample data)
      if: matrix.cfg.SAMPLE_DATA == false
      run:
        docker build magento -f magento/Dockerfile-2.3
        -t michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}
        --build-arg MAGENTO_VERSION=${{ matrix.cfg.MAGENTO_VERSION }}
        --build-arg PHP_VERSION=${{ matrix.cfg.PHP_VERSION }}

    - name: Build the Docker image (with sample data)
      if: matrix.cfg.SAMPLE_DATA == true
      run:
        docker build magento -f magento/Dockerfile-2.3
        -t michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}-sample-data
        --build-arg MAGENTO_VERSION=${{ matrix.cfg.MAGENTO_VERSION }}
        --build-arg PHP_VERSION=${{ matrix.cfg.PHP_VERSION }}
        --build-arg SAMPLE_DATA=true

    # Step 2: Test the docker image
    - name: Start the docker image (without sample date)
      if: matrix.cfg.SAMPLE_DATA == false
      run:
        docker run --memory=4G --detach --name magento-project-community-edition
        michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}

    - name: Start the docker image (with sample date)
      if: matrix.cfg.SAMPLE_DATA == true
      run:
        docker run --detach --name magento-project-community-edition
        michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}-sample-data

    - name: Create the dummy test directory
      run: docker exec magento-project-community-edition mkdir -p /data/app/code/MichielGerritsen/Magento2ExtensionIntegrationTest/Test/Integration

    - name: Copy the example test
      run: for file in Test/*; do docker cp $file magento-project-community-edition:/data/app/code/MichielGerritsen/Magento2ExtensionIntegrationTest/Test/Integration/; done

    - name: Enable developer mode
      run: docker exec magento-project-community-edition bash -c "until php bin/magento deploy:mode:set developer || (( count++ >= 10 )); do echo 'Command failed. New try'; done"

    - name: Run setup:di:compile
      run: docker exec magento-project-community-edition php bin/magento setup:di:compile || docker exec magento-project-community-edition php bin/magento setup:di:compile || docker exec magento-project-community-edition php bin/magento setup:di:compile || docker exec magento-project-community-edition php bin/magento setup:di:compile

    - name: Run the example test
      run: docker exec magento-project-community-edition bash -c "cd /data/dev/tests/integration/ && ../../../vendor/bin/phpunit /data/app/code/MichielGerritsen/Magento2ExtensionIntegrationTest/Test/Integration/ExampleTest.php"

    # Step 3: Upload the images to Docker Hub.
    - name: Docker hub login
      if: github.ref == 'refs/heads/build'
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push the image to Docker hub (without sample data)
      if: github.ref == 'refs/heads/build' && matrix.cfg.SAMPLE_DATA == false
      run: docker push michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}

    - name: Push the image to Docker hub (with sample data)
      if: github.ref == 'refs/heads/build' && matrix.cfg.SAMPLE_DATA == true
      run: docker push michielgerritsen/magento-project-community-edition:${{ matrix.cfg.PHP_VERSION }}-magento${{ matrix.cfg.MAGENTO_VERSION }}-sample-data
